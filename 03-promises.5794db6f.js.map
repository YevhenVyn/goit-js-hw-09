{"mappings":"YAAA,IAAMA,EAAgBC,SAASC,cAAc,SACvCC,EAAO,CACXC,WAAYJ,EAAcE,cAAc,kBACxCG,UAAWL,EAAcE,cAAc,iBACvCI,YAAaN,EAAcE,cAAc,mBACzCK,OAAQP,EAAcE,cAAc,mBAGtC,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEpBA,E,IAEJS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IACzDM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACpBG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IA0B3Df,EAAKI,OAAOkB,iBAAiB,SAtB7B,SAAuBC,GACrBA,EAAMC,iBAIR,SAA2BC,EAAIC,GAE7B,IADA,IAAIC,EAAeF,EAAIV,MACda,EAAI,EAAGA,GAAKH,EAAII,OAAQD,GAAG,EAClCF,EAAGE,EAAED,GACLA,GAA8BF,EAAIK,I,CAPpCC,CAYK,CACHhB,MAAOiB,OAAOhC,EAAKC,WAAWgC,OAC9BH,KAAME,OAAOhC,EAAKE,UAAU+B,OAC5BJ,OAAQ7B,EAAKG,YAAY8B,OAfQ5B,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formContainer = document.querySelector('.form')\nconst refs = {\n  inputDelay: formContainer.querySelector('[name = delay]'),\n  inputStep: formContainer.querySelector('[name = step]'),\n  inputAmount: formContainer.querySelector('[name = amount]'),\n  btnSub: formContainer.querySelector('[type= submit]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  })\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n}\n\nfunction handleBtnSub (event) {\n  event.preventDefault();\n  startPromiseCycle(getInputValues(),createPromise)\n}\n\nfunction startPromiseCycle(obj,fn){\n  let currentDelay = obj.delay;\n  for (let i = 1; i <= obj.amount; i+=1) {\n    fn(i,currentDelay);\n    currentDelay = currentDelay + obj.step\n  }\n}\n\nfunction getInputValues () {\nreturn {\n    delay: Number(refs.inputDelay.value),\n    step: Number(refs.inputStep.value), \n    amount: refs.inputAmount.value,\n    // test: 'test',\n  }\n}\n\nrefs.btnSub.addEventListener('click', handleBtnSub);"],"names":["$ce04d3a99e08e73b$var$formContainer","document","querySelector","$ce04d3a99e08e73b$var$refs","inputDelay","inputStep","inputAmount","btnSub","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","console","log","concat","catch","addEventListener","event","preventDefault","obj","fn","currentDelay","i","amount","step","$ce04d3a99e08e73b$var$startPromiseCycle","Number","value"],"version":3,"file":"03-promises.5794db6f.js.map"}
{"mappings":"AAAA,MAAMA,EAAgBC,SAASC,cAAc,SACvCC,EAAO,CACXC,WAAYJ,EAAcE,cAAc,kBACxCG,UAAWL,EAAcE,cAAc,iBACvCI,YAAaN,EAAcE,cAAc,mBACzCK,OAAQP,EAAcE,cAAc,mBAGtC,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,IAEVS,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,QAAQC,IAAI,uBAAqBJ,QAAiBC,MAAU,IAC3DI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MACpBE,QAAQC,IAAI,sBAAoBJ,QAAeC,MAAU,G,CA0B7Df,EAAKI,OAAOgB,iBAAiB,SAtB7B,SAAuBC,GACrBA,EAAMC,iBAIR,SAA2BC,EAAIC,GAC7B,IAAIC,EAAeF,EAAIR,MACvB,IAAK,IAAIW,EAAI,EAAGA,GAAKH,EAAII,OAAQD,GAAG,EAClCF,EAAGE,EAAED,GACLA,GAA8BF,EAAIK,I,CAPpCC,CAYK,CACHd,MAAOe,OAAO9B,EAAKC,WAAW8B,OAC9BH,KAAME,OAAO9B,EAAKE,UAAU6B,OAC5BJ,OAAQ3B,EAAKG,YAAY4B,OAfQ1B,E","sources":["src/js/03-promises.js"],"sourcesContent":["const formContainer = document.querySelector('.form')\nconst refs = {\n  inputDelay: formContainer.querySelector('[name = delay]'),\n  inputStep: formContainer.querySelector('[name = step]'),\n  inputAmount: formContainer.querySelector('[name = amount]'),\n  btnSub: formContainer.querySelector('[type= submit]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  })\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n}\n\nfunction handleBtnSub (event) {\n  event.preventDefault();\n  startPromiseCycle(getInputValues(),createPromise)\n}\n\nfunction startPromiseCycle(obj,fn){\n  let currentDelay = obj.delay;\n  for (let i = 1; i <= obj.amount; i+=1) {\n    fn(i,currentDelay);\n    currentDelay = currentDelay + obj.step\n  }\n}\n\nfunction getInputValues () {\nreturn {\n    delay: Number(refs.inputDelay.value),\n    step: Number(refs.inputStep.value), \n    amount: refs.inputAmount.value,\n    // test: 'test',\n  }\n}\n\nrefs.btnSub.addEventListener('click', handleBtnSub);"],"names":["$47d4ff9957288465$var$formContainer","document","querySelector","$47d4ff9957288465$var$refs","inputDelay","inputStep","inputAmount","btnSub","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","console","log","catch","addEventListener","event","preventDefault","obj","fn","currentDelay","i","amount","step","$47d4ff9957288465$var$startPromiseCycle","Number","value"],"version":3,"file":"03-promises.d7b4d69c.js.map"}